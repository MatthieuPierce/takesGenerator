[{"/home/matthieu/Downloads/coding/takes-generator/src/index.js":"1","/home/matthieu/Downloads/coding/takes-generator/src/App.js":"2","/home/matthieu/Downloads/coding/takes-generator/src/reportWebVitals.js":"3","/home/matthieu/Downloads/coding/takes-generator/src/redux/reducers.js":"4","/home/matthieu/Downloads/coding/takes-generator/src/redux/constants.js":"5","/home/matthieu/Downloads/coding/takes-generator/src/redux/actions.js":"6","/home/matthieu/Downloads/coding/takes-generator/src/components/Sharebox.js":"7"},{"size":848,"mtime":1610838609388,"results":"8","hashOfConfig":"9"},{"size":1886,"mtime":1610846624687,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610758329592,"results":"11","hashOfConfig":"9"},{"size":1291,"mtime":1610838614964,"results":"12","hashOfConfig":"9"},{"size":84,"mtime":1610837927496,"results":"13","hashOfConfig":"9"},{"size":107,"mtime":1610838613440,"results":"14","hashOfConfig":"9"},{"size":571,"mtime":1610846662559,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1dqunl8",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/matthieu/Downloads/coding/takes-generator/src/index.js",["33","34"],"//Default imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//Redux imports\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers.js'\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["35","36"],"/home/matthieu/Downloads/coding/takes-generator/src/App.js",["37"],"/home/matthieu/Downloads/coding/takes-generator/src/reportWebVitals.js",[],"/home/matthieu/Downloads/coding/takes-generator/src/redux/reducers.js",["38"],"import { NEXT } from './constants.js';\n\nconst startingState = {\n  text: '',\n  author: '',\n  usedPhrases: [],\n  freshPhrases: testPhrases\n}\n\nconst testPhrases = [\n  {\n    text: 'Anything can be an adult diaper if you have confidence.',\n    author: 'Betty Dont'\n  },\n  {\n    text: 'Carbonated Contact Lenses!',\n    author: 'The Council for Carbon Squestration'\n  },\n  {\n    text: 'Homestar Runner dot com is the Illiad of the 21st century.',\n    author: 'Matthieu Pierce'\n  },\n  {\n    text: 'Sure, bring it inside the city gates-- never look a gift horse in the mouth!',\n    author: 'Paris of Troy'\n  }\n];\n\n\nfunction rootReducer(state = startingState, action) {\n  switch (action.type) {\n    case (NEXT):\n      let lastPhrase = {\n        text: state.text,\n        author: state.author\n      };\n      let randomFreshIndex = Math.floor(Math.random() * state.freshPhrases.length);\n      let { text, author } = state.freshPhrases[randomFreshIndex];\n      return ({\n        text: text,\n        author: author,\n        usedPrhases: state.usedPhrases.concat(lastPhrase),\n        freshPhrases: [...state.freshPhrases.slice(0, randomFreshIndex), \n                      ...state.freshPhrases.slice(randomFreshIndex + 1)]\n      });\n    default:\n      return state;\n\n  }\n  \n\n}\n\n\nexport default rootReducer;","/home/matthieu/Downloads/coding/takes-generator/src/redux/constants.js",[],"/home/matthieu/Downloads/coding/takes-generator/src/redux/actions.js",[],"/home/matthieu/Downloads/coding/takes-generator/src/components/Sharebox.js",["39"],{"ruleId":"40","severity":1,"message":"41","line":9,"column":20,"nodeType":"42","messageId":"43","endLine":9,"endColumn":27},{"ruleId":"40","severity":1,"message":"44","line":10,"column":23,"nodeType":"42","messageId":"43","endLine":10,"endColumn":38},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"40","severity":1,"message":"49","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":7,"column":17,"nodeType":"42","messageId":"52","endLine":7,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":5,"column":3,"nodeType":"55","messageId":"56","endLine":7,"endColumn":4},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'combineReducers' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'logo' is defined but never used.","no-use-before-define","'testPhrases' was used before it was defined.","usedBeforeDefined","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]